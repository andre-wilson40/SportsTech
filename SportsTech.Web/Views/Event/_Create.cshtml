@model SportsTech.Web.ViewModels.Event.CreateViewModel

@using (Html.BeginForm("CreateEvent", "Event", FormMethod.Post, new { id = "CreateNewEvent" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Against, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Against)
                @Html.ValidationMessageFor(model => model.Against)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsHomeGame, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsHomeGame)
                @Html.ValidationMessageFor(model => model.IsHomeGame)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Referee, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Referee)
                @Html.ValidationMessageFor(model => model.Referee)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EventDate)
                @Html.ValidationMessageFor(model => model.EventDate)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Create" class="btn btn-primary" />
                <input type="submit" value="Cancel" class="btn btn-default btn-cancel" />
            </div>
        </div>
    </div>
}


